.nh
.TH "monospace" "1" "Jun 2024" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
monospace-check - Performs various checks on the monospace config file and projects


.SH SYNOPSIS
.PP
\fBmonospace check [flags]\fP


.SH DESCRIPTION
.PP
Performs various checks on the monospace config file and projects.

.SH Check projects
.PP
Check projects remote origin match the monospace config file

.PP
While using monospace you will import some new repositories to the monospace,
create local projects which soon will become either internal or external projects.
This command help you maintain projects remote origins and projects settings
in the monospace.yml config file consistent.

.PP
Here's the reported anomalies and the action taken when --fix flag is used:
- for local projects:
  - check it's still a git repository: fixed by setting project as internal
  - check project remote origin is still not set: fixed by updating config
    with repo remote origin or setting project internal
- for external projects:
  - check project files exists: fixed by cloning the project
  - check project dir is a git repository: fixed by setting project internal
  - check project repo origin match the one in config: fixed by updating the
    config with repo remote origin
- for internal projects:
  - check project dir exists: fixed by removing project from config
  - check project is not a git repository: fixed by updating config with
    repo remote origin (error if remote origin is not set)

.PP
More choices may be available when --interactive flag is used

.SH Check pipeline (skipped if --project-filter is used)
.RS
.IP \(bu 2
Check tasks are associated with existing projects.
.IP \(bu 2
Check tasks depends on existing non persistent tasks.
.IP \(bu 2
Check for circular task dependencies
There's no fix available on pipeline errors

.RE

.SH Check githooks path (warning only, skipped if --project-filter is used)
.RS
.IP \(bu 2
if a .monospace/githooks dir exists check git core.hooksPath is set to it
There's no fix available on githooks path errors only a warning message, it
won't change the exit status of the command.

.RE

.SH Check js_package_manager (skipped if --project-filter is used)
.RS
.IP \(bu 2
check package manager version match the one installed: fixed by updating config
won't change the exit status of the command.

.RE


.SH OPTIONS
.PP
\fB--fix\fP[=false]
	Try to fix reported anomalies, disable interactive mode

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for check

.PP
\fB-r\fP, \fB--include-root\fP[=false]
	Include 'root' monospace directory in the list of projects
- Without any filter, 'root' is only appended to projects list
- Used with --project-filter, 'root' is appended to filters list

.PP
\fB-i\fP, \fB--interactive\fP[=false]
	Prompt for action to take on each reported anomaly

.PP
\fB-p\fP, \fB--project-filter\fP=[]
	Filter projects by name
This is like 'whitelisting' project in the list
You can use 'root' for monospace root directory

.PP
\fB-P\fP, \fB--project-filter-out\fP=[]
	Filter out by name
Exclude projects from the list (blacklisting)


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB-C\fP, \fB--no-color\fP[=false]
	Disable color output mode (you can also use env var NO_COLOR)


.SH SEE ALSO
.PP
\fBmonospace(1)\fP


.SH HISTORY
.PP
19-Jun-2024 Auto generated by spf13/cobra
