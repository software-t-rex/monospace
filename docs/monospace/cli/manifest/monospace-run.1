.nh
.TH "monospace" "1" "Apr 2023" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
monospace-run - Run given tasks in each project directory


.SH SYNOPSIS
.PP
\fBmonospace run [options] task1 [task2...] [flags]\fP


.SH DESCRIPTION
.PP
Run given command in each project directory concurrently.

.PP
You can restrict the tasks execution to one or more projects
using the --project-filter flag.
You can pass additional arguments to tasks separating them with a double hyphen.

.PP
you can get a dependency graph of tasks to run by using the --graphviz flag.
It will output the dot representation in your terminal and open your browser
for visual online rendering.

.PP
A circular dependency check will be performed before the execution starts.


.SH OPTIONS
.PP
\fB-g\fP, \fB--graphviz\fP[=false]
	Open a graph visualisation of the task execution plan instead of executing it

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for run

.PP
\fB-O\fP, \fB--output-mode\fP=""
	output mode for multiple commands:
- grouped
- interleaved
- status-only
- errors-only
- none
(default to monospace.yml settings or grouped if not set)

.PP
\fB-p\fP, \fB--project-filter\fP=[]
	Filter projects by name
You can use 'root' for monospace root directory
Use '!\&' prefix to exclude a project


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB-C\fP, \fB--no-color\fP[=false]
	Disable color output mode (you can also use env var NO_COLOR)


.SH EXAMPLE
.PP
.RS

.nf
  monospace run --project-filter modules/mymodule --project-filter modules/myothermodule test
  # or more concise
  monospace run -p modules/mymodule,modules/myothermodule test
  monospace run -p modules/mymodule,modules/myothermodule test -- additionalArg=value
  # get some dependency graph
  monospace run task --graphviz
  # or for the entire pipeline
  monospace run --graphviz

.fi
.RE


.SH SEE ALSO
.PP
\fBmonospace(1)\fP


.SH HISTORY
.PP
14-Apr-2023 Auto generated by spf13/cobra
