.nh
.TH "monospace" "1" "Mar 2023" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
monospace-externalize - Turn an 'internal' project into an 'external' project


.SH SYNOPSIS
.PP
\fBmonospace externalize projectName [repoUrl] [flags]\fP


.SH DESCRIPTION
.PP
Turn an 'internal' project into an 'external' project.

.PP
Here what this command will really do:
- Add the projectName to the monospace .gitignore
- Init a new repository in the project directory
- Add a default gitignore for that project if none exists
- optionally set initial branch name (--initial-branch=name, default to 'master')
- optionally copy history from monospace for commits related to files in that project (--history)
- optionally create a new commit with all files in the directory (--commit)
- optionally push -u to the new origin (--push)

.PP
Beware that the operation will remove all files in the project directory before re-creating them.
You should check that there's no untracked files before proceeding as they will be lost.


.SH OPTIONS
.PP
\fB-h\fP, \fB--help\fP[=false]
	help for externalize

.PP
\fB-b\fP, \fB--initial-branch\fP=""
	set the default branch name (default to your git default setting)

.PP
\fB-y\fP, \fB--no-interactive\fP[=false]
	Prevent any interactive prompts by choosing default values (not always yes)

.PP
\fB-p\fP, \fB--push\fP[=false]
	push initial branch and set upstream to origin


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB-C\fP, \fB--no-color\fP[=false]
	Disable color output mode (you can also use env var NO_COLOR)


.SH SEE ALSO
.PP
\fBmonospace(1)\fP


.SH HISTORY
.PP
29-Mar-2023 Auto generated by spf13/cobra
